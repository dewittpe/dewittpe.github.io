{
  "hash": "4eb6eeb8f16563e3497838270bb01126",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"phoenix R package and Python Module\"\nauthor: \"Peter E. DeWitt\"\ndate: \"2024-10-02\"\ncategories: [news, R, sepsis, python, sql]\n---\n\n\n\n<img src=\"hexsticker.png\" width=\"300px\" align=\"right\"/>\n\nEarlier this year I [published](https://doi.org/10.1093/jamiaopen/ooae066) an R\npackage, Python module, and example SQL code for implementing the Phoenix sepsis\ncriteria.\n\nThe Phoenix criteria is the new standard diagnostic criteria for pediatric\nsepsis.  Papers on the international consensus and development of the Phoenix\ncriteria were published in JAMA in January of 2024.\n\nThe R package, Python module, and example SQL code, were written for two\nreasons:\n\n1. I know I will need to apply the Phoenix criteria to many more data sets and I\n   will benefit from having a package that already has the criteria defined.\n\n2. To provide other analysts with a way to apply the Phoenix criteria to their\n   data sets with no ambiguity in the implementation.\n\n\nThere was one task as part of the development of Phoenix that I was frustrated\nby--implementing existing organ dysfunction and sepsis scores.  The\nimplementation wasn't difficult from a coding point-of-view, it was difficult in\nunderstanding the edge cases which tended to not be well defined in the\npublications.  In my discussions with clinical experts, I found that what was\ncompletely clear to the clinician was marginally ambiguous to the person writing\nthe code.\n\nAn example of this ambiguity between clinician and coder was in the\nimplementation of the Lactate scoring from the [PELOD-2](https://www.ncbi.nlm.nih.gov/pmc/articles/PMC6733216/)\nwhich was ultimately adapted as part of the Phoenix criteria.\n\nBelow is PELOD-2 reported criteria (see table 1 in the published manuscript)\nalong with a couple alternative notations.\n\n|               | 0 Points                          | 1 Point                            | 2 Points                          |\n| :--           | :----                             | :----                              | :----                             |\n| PELOD-2       | Lactate < 5 mmol/L                | Lactate 5-10.9 mmol/L              | Lactate &geq; 11 mmol/L           |\n| alternative 1 | Lactate < 5 mmol/L                | 5 mmol/L &leq; Lactate < 11 mmol/L | Lactate &geq; 11 mmol/L           |\n| alternative 2 | Lactate $\\in (-\\infty, 5)$ mmol/L | Lactate $\\in [5, 11)$ mmol/L       | Lactate $\\in [11, \\infty)$ mmol/L |\n\nA couple things I want to point out.  The different between 0 and 1 point\nimplicitly defines 5 mmol/L as 1 point due to the strict inequality for 0\npoints.  That's fine, and quite common in the literature for other organ\ndysfunction scores.  The difference between 1 and 2 points is mildly ambiguous.\nGiven that 2 points is defined as greater than or equal to 11 mmol/L then the\nimplication that strictly less than 11 mmol/L (and greater or equal to 5 mmol/L)\nis 1 point.  So yes, the PELOD-2 definition is complete, but it\nrequires a little bit of active and critical thinking to correctly implement.\n\nIn my discussions with clinicians, Lactate is only really known, at least in\ntheir experience, to one decimal place and a negative value would just be\nignored, as would an implausibly large value.  So, at the bedside, the\ndefinition is clear and complete.\n\nHowever, in the data set we had form 10 hospital system from\nNorth America, South America, Asia, and Africa, the majority only reported\nLactate to one decimal point.  However, there were some hospital systems, and\nmany reported lab results were Lactate $\\in (10.9, 11.0)$ mmol/L. What are the\nrounding rules to use?\n\nTo alleviate the ambiguity and provide the needed detail to the analysis with\nzero medical knowledge, I prefer the alternative 2 notation. This is\ncomplete and covers all possible values, cut points, and even impossible values.\n\nThat said, the need to have the\nexplicit lower bound is not necessary.  The development of Phoenix mapped\nmissing values, a negative Lactate is not possible and could be considered a\nmissing value, map to scores of zero.  So alternative 1 might be the best\nnotation, for the scoring.  Alternative 1 has the advantage of being complete in\nthat someone could implement the scoring for 1 point with out having to know\nanything about the scoring rules for 0 or 2 points.\n\nThat all said, the actual implementation for the lactate scores is extremely\nsimple:\n\n```r\n# R\nlct_score <- (lct >= 11) + (lct >= 5)\n```\n```python\n# python\nlct_score = (lct >= 11).astype(int) + (lct >= 5).astype(int)\n```\n```sql\n--SQL\nCASE WHEN lactate >= 11 THEN 2\n     WHEN lactate >=  5 THEN 1\n     ELSE 0 END AS lactate_points\n```\n\nOkay, stepping off my ridicules soap box.  The table published in the PELOD-2\nmanuscript and the JAMA publications for Phoenix are\nsufficient and consistent with other published organ dysfunction scoring tables.\nI just didn't like having to think so hard and try to find additional detail to\nknow if I was correctly rounding, or working with the cut points as intended.\n\nAs one of the primary data analysts on the team that developed the Phoenix\nscore, I know exactly how the scoring criteria were implemented.  By providing a\ncode base that implements the scoring consistent with development scoring, any\nambiguity in the published tables can be ignored as the code will just take care\nof it.\n\n## The phoenix R package\n\nAt the time of writing this post, version 1.1.0 of the phoenix package is\navailable on [CRAN](https://cran.r-project.org/package=phoenix).\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(phoenix)\n```\n:::\n\n\n\nWithin the package there is an example data set called \"sepsis\" used for\nexamples.  It is a data.frame with 20 rows of 27\nvariables.  Review the documentation for details on each of the variables.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n?sepsis\n```\n:::\n\n\n\nHere is an example of applying the cardiovascular scoring.  The score ranges\nfrom 0 to 6 points and considers three areas.\n\nFirst, is the patient on any vasocative medications?  0 points for no\nmedications, 1 point for one medication, and 2 points for two or more\nmedications. The set of possible medications is dobutamine, dopamine,\nepinephrine, milrinone, norepinephrine, and vasopressin.  A notable difference\nfrom Phoenix and other cardiovascular dysfunction scores based on medications,\nis that the dosage and the specific medication is not relevant to Phoenix.  The\nreason for this is that the Phoenix criteria needed to be applicable to high-\nand middle- or low-resourced environments.  Some places may not have access to\nall six medications, in our development set there was a site with only three of\nthe six, a couple sites with only four of the six.  If the specific medications\nwere considered then the sites that did not have the medication would\nartificially have less ill patients. Phoenix avoids this problem by just\ncounting the medications. Additionally, other cardiovascular dysfunction scores\nconsidered the dosage of the medications.  The units for the dosage, generally\n&mu;g/kg/min, was not consistently report either.\n\nNext, lactate values contribute 0, 1, or 2 points, as noted above.\n\nLastly, age adjusted mean arterial pressures (MAP) contributes another 0, 1, or\n2 points.\n\nFull details on the scoring can be found in the documentation for the\nphoenix_cardiovascular scoring function and the published manuscripts.\n```r\n?phoenix_cardiovascular\n```\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncard_example <-\n  sepsis[c(\"pid\", \"dobutamine\", \"dopamine\", \"epinephrine\", \"milrinone\",\n           \"norepinephrine\", \"vasopressin\", \"lactate\", \"dbp\", \"sbp\", \"age\")]\n\ncard_example$score <-\n  phoenix_cardiovascular(\n    vasoactives = dobutamine + dopamine + epinephrine +\n                  milrinone + norepinephrine + vasopressin,\n    lactate     = lactate,\n    age         = age,\n    map         = map(sbp = sbp, dbp = dbp),\n    data        = sepsis)\n\ncard_example\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n   pid dobutamine dopamine epinephrine milrinone norepinephrine vasopressin\n1    1          1        1           1         1              0           0\n2    2          0        1           0         0              1           0\n3    3          0        1           0         0              0           0\n4    4          0        0           0         0              0           0\n5    5          0        0           0         0              0           0\n6    6          0        1           0         0              0           0\n7    7          0        0           1         1              0           1\n8    8          0        0           0         0              0           0\n9    9          0        0           1         1              1           1\n10  10          0        0           0         0              0           0\n11  11          0        1           1         0              0           0\n12  12          0        0           0         0              0           0\n13  13          0        0           0         0              0           0\n14  14          0        0           1         1              0           0\n15  15          0        1           1         1              0           1\n16  16          1        1           1         1              1           0\n17  17          0        1           1         1              0           1\n18  18          0        1           1         1              0           1\n19  19          0        0           1         1              0           0\n20  20          0        0           1         0              0           0\n   lactate dbp sbp    age score\n1       NA  40  53   0.06     2\n2     3.32  60  90 201.70     2\n3     1.00  87 233  20.80     1\n4       NA  57 104 192.50     0\n5       NA  57 101 214.40     0\n6     1.15  79 119 101.20     1\n7       NA  11  14 150.70     4\n8       NA  66 112 159.70     0\n9     8.10  51 117 176.10     3\n10      NA  58  84   6.60     0\n11      NA  39  51  36.70     3\n12      NA  63 132  37.40     0\n13      NA  55  93   0.12     0\n14      NA  54 106  62.30     2\n15      NA  25  37  10.60     3\n16    0.90  55  82   0.89     2\n17    0.60  43  79  10.70     2\n18      NA  53  75  10.60     2\n19      NA  44  70   0.17     2\n20    2.20  77  99  71.90     1\n```\n\n\n:::\n:::\n\n\n\nTo apply the full Phoenix criteria to a data set, scoring based on respiratory,\ncardiovascular, coagulation, and neurologic dysfunction, can be done with a call\nto phoenix.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nphoenix_scores <-\n  phoenix(\n    # respiratory\n      pf_ratio = pao2 / fio2,\n      sf_ratio = ifelse(spo2 <= 97, spo2 / fio2, NA_real_),\n      imv = vent,\n      other_respiratory_support = as.integer(fio2 > 0.21),\n    # cardiovascular\n      vasoactives = dobutamine + dopamine + epinephrine + milrinone + norepinephrine + vasopressin,\n      lactate = lactate,\n      age = age,\n      map = map(sbp, dbp),\n    # coagulation\n      platelets = platelets,\n      inr = inr,\n      d_dimer = d_dimer,\n      fibrinogen = fibrinogen,\n    # neurologic\n      gcs = gcs_total,\n      fixed_pupils = as.integer(pupil == \"both-fixed\"),\n    data = sepsis\n  )\nstr(phoenix_scores)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n'data.frame':\t20 obs. of  7 variables:\n $ phoenix_respiratory_score   : int  0 3 3 0 0 3 3 0 3 3 ...\n $ phoenix_cardiovascular_score: int  2 2 1 0 0 1 4 0 3 0 ...\n $ phoenix_coagulation_score   : int  1 1 2 1 0 2 2 1 1 0 ...\n $ phoenix_neurologic_score    : int  0 1 0 0 0 1 0 0 1 1 ...\n $ phoenix_sepsis_score        : int  3 7 6 1 0 7 9 1 8 4 ...\n $ phoenix_sepsis              : int  1 1 1 0 0 1 1 0 1 1 ...\n $ phoenix_septic_shock        : int  1 1 1 0 0 1 1 0 1 0 ...\n```\n\n\n:::\n:::\n\n\n\nThe return from phoenix is a data.frame with the individual organ dysfunction\nscores, the total Phoenix score, an indicator for Phoenix Sepsis (a score\nof 2 or more points), and an indicator for Phoenix septic shock (a score of 2 or\nmore points with at least one cardiovascular dysfunction point).\n\nAdditionally there is a Phoenix-8 scoring which extends the Phoenix scoring to\ninclude endocrine, immunologic, renal, and hepatic organ dysfunction scores and\nis implemented in the function phoenix8.\n```r\n?phoenix8\n```\n\n## Python module\n\nA python module is available on\n[PyPi](https://pypi.org/project/phoenix-sepsis/).  It mirrors the function of\nthe R package closely and contains the same example data set.\n\n\n\n::: {.cell}\n\n```{.python .cell-code}\nimport numpy as np\nimport pandas as pd\nimport importlib.resources\nimport phoenix as phx\n\npath = importlib.resources.files('phoenix')\nsepsis = pd.read_csv(path.joinpath('data').joinpath('sepsis.csv'))\n```\n:::\n\n\n\nScoring the cardiovascular dysfunction:\n\n\n\n::: {.cell}\n\n```{.python .cell-code}\npy_card = phx.phoenix_cardiovascular(\n    vasoactives = sepsis[\"dobutamine\"] + sepsis[\"dopamine\"] +\n                  sepsis[\"epinephrine\"] + sepsis[\"milrinone\"] +\n                  sepsis[\"norepinephrine\"] + sepsis[\"vasopressin\"],\n    lactate = sepsis[\"lactate\"],\n    age = sepsis[\"age\"],\n    map = phx.map(sepsis[\"sbp\"], sepsis[\"dbp\"])\n)\nprint(type(py_card))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n<class 'numpy.ndarray'>\n```\n\n\n:::\n\n```{.python .cell-code}\nprint(py_card)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[2 2 1 0 0 1 4 0 3 0 3 0 0 2 3 2 2 2 2 1]\n```\n\n\n:::\n:::\n\n\n\nScoring the Phoenix criteria:\n\n\n\n::: {.cell}\n\n```{.python .cell-code}\npy_phoenix_scores = phx.phoenix(\n    # resp\n    pf_ratio = sepsis[\"pao2\"] / sepsis[\"fio2\"],\n    sf_ratio = np.where(sepsis[\"spo2\"] <= 97, sepsis[\"spo2\"] / sepsis[\"fio2\"], np.nan),\n    imv      = sepsis[\"vent\"],\n    other_respiratory_support = (sepsis[\"fio2\"] > 0.21).astype(int).to_numpy(),\n    # cardio\n    vasoactives = sepsis[\"dobutamine\"] + sepsis[\"dopamine\"] +\n                  sepsis[\"epinephrine\"] + sepsis[\"milrinone\"] +\n                  sepsis[\"norepinephrine\"] + sepsis[\"vasopressin\"],\n    lactate = sepsis[\"lactate\"],\n    age = sepsis[\"age\"],\n    map = phx.map(sepsis[\"sbp\"], sepsis[\"dbp\"]),\n    # coag\n    platelets = sepsis['platelets'],\n    inr = sepsis['inr'],\n    d_dimer = sepsis['d_dimer'],\n    fibrinogen = sepsis['fibrinogen'],\n    # neuro\n    gcs = sepsis[\"gcs_total\"],\n    fixed_pupils = (sepsis[\"pupil\"] == \"both-fixed\").astype(int),\n    )\nprint(py_phoenix_scores.info())\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n<class 'pandas.core.frame.DataFrame'>\nRangeIndex: 20 entries, 0 to 19\nData columns (total 7 columns):\n #   Column                        Non-Null Count  Dtype\n---  ------                        --------------  -----\n 0   phoenix_respiratory_score     20 non-null     int64\n 1   phoenix_cardiovascular_score  20 non-null     int64\n 2   phoenix_coagulation_score     20 non-null     int64\n 3   phoenix_neurologic_score      20 non-null     int64\n 4   phoenix_sepsis_score          20 non-null     int64\n 5   phoenix_sepsis                20 non-null     int64\n 6   phoenix_septic_shock          20 non-null     int64\ndtypes: int64(7)\nmemory usage: 1.2 KB\nNone\n```\n\n\n:::\n\n```{.python .cell-code}\nprint(py_phoenix_scores.head())\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n   phoenix_respiratory_score  ...  phoenix_septic_shock\n0                          0  ...                     1\n1                          3  ...                     1\n2                          3  ...                     1\n3                          0  ...                     0\n4                          0  ...                     0\n\n[5 rows x 7 columns]\n```\n\n\n:::\n:::\n\n\n\n## Closing\nIf you are interested in researching pediatric sepsis then the Phoenix criteria\nwill be an important part of your research for the forseeable future.  The R\npacakge, Python module, and example [SQL code](https://cu-dbmi-peds.github.io/phoenix/articles/sql.html)\nhave been provided to simplify the implementation of the Phoenix criteria.\n\n## Links:\n\n- [Package website](cu-dbmi-peds.github.io/phoenix/)\n- [github](https://github.com/cu-DBMI-Peds/phoenix/)\n- [CRAN](https://cran.r-project.org/package=phoenix)\n- [PyPi](https://pypi.org/project/phoenix-sepsis/)\n- Peer Reviewed Manuscripts:\n  - [phoenix: an R package and Python module for calculating the Phoenix pediatric sepsis score and criteria](https://doi.org/10.1093/jamiaopen/ooae066)\n  - [International Consensus Criteria for Pediatric Sepsis and Septic Shock](doi:10.1001/jama.2024.0179)\n  - [Development and Validation of the Phoenix Criteria for Pediatric Sepsis and Septic Shock](doi:10.1001/jama.2024.0196)\n- Other blog posts:\n  - CU Anschutz: [Researchers Take Diagnosis of Pediatric Sepsis to the Next Level](https://news.cuanschutz.edu/news-stories/researchers-take-diagnosis-of-pediatric-sepsis-to-the-next-level)\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}